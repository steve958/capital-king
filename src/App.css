/* App.css */

/* Use a border-box model for all elements to simplify sizing */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reset default margin/padding */
html,
body {
  margin: 0;
  padding: 0;
  width: 100%;
  height: 100%;
  overflow-x: hidden;
  /* Prevent horizontal scrolling on mobile */
  font-family: 'Roboto', sans-serif;
  background-color: #e7e3e3;
  /* Light gray background as per minimalistic design */
  color: #EF8E03;
  /* Text color for readability */
}

h4 {
  text-shadow: 1px 1px 1px black;
}

/* Set a mobile-first base font size */
html {
  font-size: 16px;
  /* Base scaling for mobile */
}

/* Ensure images and media are responsive */
img,
video {
  max-width: 100%;
  height: auto;
}

/* Container elements, if needed, can ensure full width on mobile */
.container,
.main-container {
  width: 100%;
  padding: 0 16px;
  /* Small horizontal padding for readability */
  box-sizing: border-box;
}

/* Buttons and clickable elements spacing */
button {
  outline: none;
}

/* Ensure full height sections if needed */
.full-height {
  min-height: 100vh;
}

/* Typography adjustments: 
   MUI components come with their own typography.
   If custom typography is needed, define classes here. */

/* Utility classes if needed */
.mt-20 {
  margin-top: 20px;
}

.mb-20 {
  margin-bottom: 20px;
}

/* Since we rely heavily on MUI for component styling, we keep custom CSS minimal.
   Additional styles can be added here as necessary for specific layout tweaks. */


@keyframes gradientAnimation {
  0% {
    background-position: 0% 50%;
  }

  50% {
    background-position: 100% 50%;
  }

  100% {
    background-position: 0% 50%;
  }
}

.animated-gradient {
  background: linear-gradient(-45deg, #a1c4fd, #c2e9fb, #ffffff, #c2e9fb, #a1c4fd);
  background-size: 400% 400%;
  animation: gradientAnimation 15s ease infinite;
  position: relative;
  overflow: hidden;
  height: 100vh;
}

/* Shape Animations */
@keyframes fadeInOut {
  0% {
    opacity: 0;
    transform: translateY(0) scale(0.5);
  }

  10% {
    opacity: 1;
    transform: translateY(0) scale(1);
  }

  90% {
    opacity: 1;
    transform: translateY(-50px) scale(1);
  }

  100% {
    opacity: 0;
    transform: translateY(-100px) scale(1.5);
  }
}

.shape {
  position: absolute;
  bottom: -100px;
  animation: fadeInOut linear forwards;
  opacity: 0;
  pointer-events: none;
}

.circle {
  border-radius: 50%;
}

.square {
  /* No additional styling needed */
}

.triangle {
  width: 0;
  height: 0;
  border-left: 15px solid transparent;
  border-right: 15px solid transparent;
  border-bottom: 30px solid;
  background: none;
}

.star {
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-bottom: 20px solid;
  position: relative;
}

.star:after {
  content: "";
  position: absolute;
  top: -10px;
  left: -10px;
  width: 0;
  height: 0;
  border-left: 10px solid transparent;
  border-right: 10px solid transparent;
  border-top: 20px solid;
  background: none;
}

.shape:hover {
  transform: scale(1.5) translateX(-50%);
  transition: transform 0.3s ease;
}

.left-crown {
  width: 50px;
  height: auto;
  position: absolute;
  left: -50px;
}

.right-crown {
  width: 50px;
  height: auto;
  position: absolute;
  right: -50px;
}